# ===========================================
# Schedule Planner Environment Variables
# ===========================================
# 이 파일을 .env로 복사하여 실제 값들을 설정하세요
# cp env.example .env

# ===========================================
# Server Configuration (필수)
# ===========================================
# Backend Server Settings
PORT=3001
NODE_ENV=production

# Frontend Server Settings
NEXT_PUBLIC_API_URL=http://localhost:3001
BACKEND_URL=http://backend:3001

# CORS Configuration
CORS_ORIGIN=http://localhost:3000

# ===========================================
# Authentication & Security (필수)
# ===========================================
# JWT Configuration
JWT_SECRET=your-super-secret-jwt-key-here-change-this-in-production
JWT_EXPIRES_IN=7d

# Google OAuth Configuration
GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=your-google-client-secret
GOOGLE_REDIRECT_URI=http://localhost:3001/auth/google/callback

# ===========================================
# Firebase Configuration (필수)
# ===========================================
# Firebase Admin SDK
FIREBASE_PROJECT_ID=your-firebase-project-id
FIREBASE_PRIVATE_KEY_ID=your-private-key-id
FIREBASE_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\nYour Private Key Here\n-----END PRIVATE KEY-----\n"
FIREBASE_CLIENT_EMAIL=firebase-adminsdk-xxxxx@your-project.iam.gserviceaccount.com
FIREBASE_CLIENT_ID=your-client-id
FIREBASE_AUTH_URI=https://accounts.google.com/o/oauth2/auth
FIREBASE_TOKEN_URI=https://oauth2.googleapis.com/token
FIREBASE_AUTH_PROVIDER_X509_CERT_URL=https://www.googleapis.com/oauth2/v1/certs
FIREBASE_CLIENT_X509_CERT_URL=https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-xxxxx%40your-project.iam.gserviceaccount.com

# ===========================================
# Database Configuration (선택사항)
# ===========================================
# MongoDB Connection (if using MongoDB)
MONGODB_URI=mongodb://localhost:27017/schedule-planner

# PostgreSQL Connection (if using PostgreSQL)
DATABASE_URL=postgresql://username:password@localhost:5432/schedule_planner

# ===========================================
# AI & Analytics Configuration (선택사항)
# ===========================================
# OpenAI API (for AI features)
OPENAI_API_KEY=sk-your-openai-api-key-here

# ===========================================
# Email Configuration (선택사항)
# ===========================================
# SMTP Settings for email notifications
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-password

# ===========================================
# File Storage Configuration (선택사항)
# ===========================================
# AWS S3 (if using S3 for file storage)
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_REGION=us-east-1
AWS_S3_BUCKET=your-s3-bucket-name

# ===========================================
# Monitoring & Logging (선택사항)
# ===========================================
# Sentry (for error tracking)
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# Log Level
LOG_LEVEL=info

# ===========================================
# Development Environment (개발 환경에서만 사용)
# ===========================================
# Development Database
DEV_DATABASE_URL=postgresql://dev_user:dev_password@localhost:5432/schedule_planner_dev

# Development API Keys
DEV_OPENAI_API_KEY=sk-your-dev-openai-api-key

# ===========================================
# Docker & Deployment (자동 설정됨)
# ===========================================
# These are automatically set by docker-compose.yml
# NODE_ENV=production
# PORT=3001
# BACKEND_URL=http://backend:3001
# NEXT_PUBLIC_API_URL=http://localhost:3001
# CORS_ORIGIN=http://localhost:3000 