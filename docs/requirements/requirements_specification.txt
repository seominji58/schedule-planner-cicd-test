[요구 사항 정의서] – "내 일정을 부탁해"

1. 개요

1.1 문서 목적
본 문서는 '내 일정을 부탁해' 프로젝트의 기능적 및 비기능적 요구사항을 정의하여,
개발자, 기획자, 디자이너, 테스트 엔지니어 등 프로젝트 참여자들이 시스템에 대한 공통된 이해를 가지도록 하는 데 목적이 있습니다.

1.2 시스템 개요
본 시스템은 기업 조직의 프로젝트 단위 일정 관리를 목적으로 하며, 개인-팀-부서-프로젝트 일정을 통합적으로 공유/관리하고,
AI 기반 역산 스케줄링 기능 및 구글 캘린더 연동을 통해 업무 효율성을 극대화하는 웹 애플리케이션입니다.

1.3 용어 정의
- 일정: 시작시간/종료시간, 중요도, 소요시간 등을 포함한 시간 단위 업무
- 프로젝트: 특정 목적을 위해 구성된 팀 단위 업무 단위
- 역산 스케줄링: 마감일로부터 거꾸로 일정을 생성하는 기능
- 권한: 관리자, 팀장, 일반 구성원 등 역할별 기능 제한 수준
- 공유: 일정 열람 및 편집 권한을 사용자 또는 조직 단위로 부여

1.4 참고 문서
- 기획 요약서 (내일정을부탁해_기획요약.txt)
- 기술 스택 문서 (내일정을부탁해_기술스택_패키지정리.txt)
- Google Calendar API, OpenAI API 문서
- Firebase 공식 문서

2. 시스템 개요 및 범위

2.1 시스템 개요
- 프로젝트 중심 일정 공유 시스템
- 구성원 간 일정을 통합 관리하여 중복과 누락 방지
- 마감일 기준 AI 자동 스케줄링 제공

2.2 기능 범위
- 일정 생성/수정/삭제/조회 (CRUD)
- 프로젝트 생성 및 팀원 지정
- 역할 기반 권한 설정 및 필터 뷰
- 구글 캘린더 연동 (양방향)
- AI 일정 최적화 및 분석 차트 시각화

2.3 사용자 분류

| 사용자 유형 | 설명 |
|--------------|------|
| 관리자 | 부서 및 프로젝트 생성, 팀원 권한 관리 |
| 팀장 | 팀 일정 관리, 구성원 배정 |
| 구성원 | 개인 일정 작성, 팀 일정 열람/참여 |

2.4 운영 환경
- 브라우저: Chrome, Edge, Safari, Firefox
- 프론트엔드: Next.js 14 + TypeScript + Tailwind CSS
- 백엔드: Node.js + Express + TypeScript
- AI 서버: Python + FastAPI + LangChain
- 데이터베이스: Firebase (Realtime Database, Authentication)
- 인증: Google OAuth2.0 + JWT
- 배포: Vercel (프론트) + Railway (백엔드, AI 서버)

3. 기능 요구 사항

| ID | 기능명 | 설명 |
|----|--------|------|
| FR-01 | 일정 등록 | 일정 제목, 기간, 중요도, 소요시간 입력 |
| FR-02 | 일정 목록 보기 | 일정 리스트를 카테고리별로 표시 |
| FR-03 | 일정 수정/삭제 | 등록한 일정을 편집 또는 삭제 |
| FR-04 | 완료 처리 | 완료된 일정은 별도 상태로 표시 |
| FR-05 | 프로젝트 생성 | 이름, 설명, 팀원, 기간 설정 |
| FR-06 | 팀원 관리 | 프로젝트 팀원 초대 및 제거 |
| FR-07 | 권한 설정 | 각 사용자에게 권한 레벨 부여 |
| FR-08 | 구글 캘린더 연동 | 로그인, 연동 상태 표시, 캘린더 내보내기 |
| FR-09 | AI 일정 최적화 | 마감일 기준 자동 일정 배치 |
| FR-10 | 분석 차트 | 일정 통계 및 트렌드 시각화 |
| FR-11 | 일정 필터링 | 개인/팀/부서/프로젝트별 뷰 제공 |
| FR-12 | 실시간 동기화 | Firebase Realtime Database 기반 실시간 업데이트 |

4. 비기능 요구 사항

| ID | 항목 | 설명 |
|----|------|------|
| NFR-01 | 보안 | OAuth 인증, JWT 토큰, 권한 기반 액세스 제한 |
| NFR-02 | 성능 | 로딩시간 1초 이하, 100건 일정 처리 가능 |
| NFR-03 | 확장성 | 모바일 대응, 다국어 대응 구조 설계 |
| NFR-04 | 백업 | Firebase DB 백업 주기 설정 (일 1회) |
| NFR-05 | 가용성 | 99% 이상 가동 시간 확보 |
| NFR-06 | 접근성 | 색상 대비, 키보드 접근성 고려 |
| NFR-07 | 유지보수성 | 기능 모듈화, 컴포넌트 기반 구조 |
| NFR-08 | 실시간성 | Firebase Realtime Database 기반 실시간 동기화 |

5. UI/UX 요구사항
- 반응형 지원 (PC/태블릿/모바일)
- 일정 항목은 카드형 인터페이스로 구성
- 역할별 UI 필터 (내 일정, 팀 일정, 전체 보기)
- 구글 로그인 연동은 팝업 방식 사용
- Next.js App Router 기반 SPA 구조
- Tailwind CSS 기반 모던 UI/UX

6. 제약 조건 및 가정 사항
- 일정 연동은 Google Calendar API 기준
- 인증은 Google OAuth + JWT 토큰 방식
- AI는 OpenAI GPT-4 기반으로 일정 분석 수행
- 기간은 약 8주: 설계(1), 개발(5), 테스트(2)
- 3개 서버(프론트/백엔드/AI) 분리 아키텍처

7. 데이터 요구 사항

| 테이블 | 필드 | 타입 | 설명 |
|--------|------|------|------|
| users | uid | string | 사용자 고유 ID |
|        | name | string | 이름 |
|        | email | string | 이메일 |
|        | role | enum | admin/team_lead/member |
|        | department | string | 소속 부서 |
|        | created_at | timestamp | 생성일시 |
| projects | id | string | 프로젝트 ID |
|          | name | string | 프로젝트명 |
|          | description | string | 프로젝트 설명 |
|          | members | array | 구성원 ID 배열 |
|          | start_date | date | 시작일 |
|          | end_date | date | 종료일 |
|          | status | enum | active/completed/paused |
|          | created_by | string | 생성자 ID |
| schedules | id | string | 일정 ID |
|           | owner | string | 사용자 ID |
|           | title | string | 일정 제목 |
|           | description | string | 일정 설명 |
|           | type | enum | personal/team/department/project |
|           | start_time | datetime | 시작 시간 |
|           | end_time | datetime | 종료 시간 |
|           | priority | int | 중요도 (1~5) |
|           | duration | int | 소요 시간 (분) |
|           | status | enum | pending/in_progress/completed |
|           | project_id | string | 프로젝트 ID (선택) |
|           | created_at | timestamp | 생성일시 |
|           | updated_at | timestamp | 수정일시 |

8. API 요구사항

8.1 백엔드 API (Node.js + Express)
- RESTful API 설계
- JWT 토큰 기반 인증
- Firebase Admin SDK 연동
- Google Calendar API 연동
- CORS 설정

8.2 AI 서버 API (Python + FastAPI)
- OpenAI GPT-4 기반 일정 분석
- LangChain 기반 역산 스케줄링
- Firebase 데이터 읽기/쓰기
- 비동기 처리 지원

--- END ---